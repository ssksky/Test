值传递：
	基本数据进行值传递时，只是将数值复制了一份传递给另一个变量；操作其中一个变量，不会影响另外一个变量的值

	引用数据类型进行值传递时，传递的引用地址；如果其中一个变量操作了内存空间，其他变量访问时访问的为操作之后的变量；

-----------------------

数组类型：
	Array类型
	特性：
	          1.数组元素每一个元素都可以保存任意数据类型的数据
	          2.数组大小可以动态调整
	          3.length属性；可读可写；可以通过该属性向数组中添加元素或者删除元素

	1.创建数组
	          1.使用构造函数创建 Array
		
		var arr=new Array();   //空数组
		var arr=new Array（20）； //创建一个数组，并且数组长度为20	
		var arr=new Array（20，30，“hello”）； //创建一个数组，并且数组元素为20  30  “hello”

		function Array(){
			if(arguments.length==0){
			 	//没有传递参数，创建空数组
			}else{
				//用户传递了参数
				if(arguments.length==1 && typeof(arguments[0])==="number"){
			 	//创建一个以参数为长度的数组						}else{
				// 创建一个数组，数组元素为参数
				}
			}
		}

		new Array();

	2.数组字面量
	 	var arr=[];//创建了数组
		添加数组元素：
			在【】用，隔开
			数组下标：从0开始	

	3.访问数组元素
		数组名称【数组下标】
		1.如果下标值小于数组长度，返回对应项的数组元素		
		2.如果下标值大于数组长度，数组自动增加到该下标值+1的长度

		数组有限最大长度
	4，检查数组
		{
		     name:'lisi'
		}
		      o.name
		      o["name"]
		      [1,2,3,4]
			arr[1]
		Array.isArray(arr); //判断当前arr是佛为数组类型
	5.将数组转换为字符串类型
		json

		o-》  json

		1.toString():

			var arr=["hello",true,false]; //[]-->new Array()
			//重写了toString（）
			arr.toString();
		2.join（）
			指定字符串来分割数组元素
			join（“-”）; 1-2-3-4

	6.数组中的栈方法和队列方法
		
		栈方法：后进先出
		               push（）：
			1.方法谁来调用
			        数组实例对象
			2.参数
			       任意类型的参数，多个参数以逗号隔开
			3.返回值
			       返回值以数组长度（添加元素之后的数组长度）
		               pop（）
			删除元素
			从数组末尾开始删除
			数组实例对象来调用
			不需要参数
			每次只能删除一个数组元素
			返回值为删除的数组元素

		队列方法:
			先进先出
			unshift（）；
				添加数组元素。添加到数组开头
				调用者数组的实例对象
				obj.unshift（）
			shift（）
				移除一个数组元素
				不需要参数
				返回值为移除的元素

	7.排序方法
		[{
		     name:'lisi'
		},{
		     name:'linsi'
		},{
		     name:'sansi'
		},{
		     name:'jack'
		}]
		1.反转排序
			reverse（）
			实例对象调用
			不需要参数
			修改原数组
			返回值为修改之后的数组
		2.sort排序
			sort（）
			1.默认顺序
			       arr .sort()
			      返回值为排序后的数组
			      sort方法会调用数组元素的toString（），然后进行比较排序
			2.自定义排序
			     arr.sort(handler）
			handler：比较函数
			sort方法可以接受一个函数作为参数，并比较函数参数：
			a，b
			如果一个参数在第二个参数之前，返回负数
			如果一个参数在第二个参数之后，返回正数
			如果一个参数和第二个参数相等，不进行比较，返回0
			var arr=[{
				name:'a',
				age:20,
				salary:1000
			},{
				name:'b',
				age:40,
				salary:3000
			},{
				name:'c',
				age:23,
				salary:1500
			},{
				name:'d',
				age:10,
				salary:5000
			}];

			arr.sort(handler());

			function handler(){
				return function(a,b){}
			}
	
			排序：
				年龄
				姓名
				薪资







