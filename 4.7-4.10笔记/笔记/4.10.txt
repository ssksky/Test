

操作方法：
	1.concat（）
		创建一个数组副本，添加数组元素（参数），添加到数组末尾
		如果拼接的参数为数组，那么将会取出数组元素拼接到原数组的副本数组中
	2.slice（）
		可以接受一个参数或者两个参数
		slice(开始位置):
			从当前位置开始截取,返回到数组末尾的所有数组元素
			开始元素可以为负数,-1代表最后一个数组元素
		slice(开始位置,结束位置)
			从当前位置开始截取,截取到结束位置停止,不包含结束位置
		var  arr=[1,2,3,4,5,6,7,8];
		arr.slice(0,3)
	3.splice():
		修改原数组
		删除数组元素:两个参数(开始位置,删除个数):返回删除的数组元素所组成的新数组
		插入数组元素:三个参数(开始位置,0,即将插入的数组元素);返回值为空数组
		替换数组元素:三个参数(开始位置,替换的个数,插入的数组元素)
	4.indexOf():
		查找数组元素,从数组开头开始查找,找到匹配元素返回数组下标,找不到返回-1;
		参数: 要查找的数组元素,开始查找的位置(可选)
		匹配时使用的全等操作符进行比较
			
	5.lastIndexOf():
		查找数组元素,从数组末尾开始查找,找到匹配元素返回下标


迭代方法:
	every()
		arr.every(function(){});
		每一个数组元素
		一个不满足：返回fasle
		都满足：true
	some()：
		只要有满足条件的,返回true
	filter()
	map()
	forEach()
	      参数:回调函数
	              参数:
		item                     index                                  arr
		每一个数组元素.   当前数组元素的数组下标    当前实例对象,当前数组


	新方法:
		reduce()



